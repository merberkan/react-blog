{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  // Data içindeki jsondan çekeceğiz burada o yüzden null veriyoruz\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(url).then(res => {\n      // console.log(res);\n      // res.ok means fetch is okey or not\n      if (!res.ok) {\n        throw Error(\"Could Not Fetch The Data For That Resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      setIsPending(false);\n    }); // örnek olarak url parametresini verdiğimizde artık url statesi tetiklendiğinde çalışacak.\n\n    return () => console.log('cleanup');\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/mertberkanakdeniz/Documents/React-Youtube/dojo-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","fetch","then","res","ok","Error","json","catch","err","message","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACP,GAAD,CAAL,CACKQ,IADL,CACWC,GAAD,IAAS;AACX;AACA;AACA,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,cAAMC,KAAK,CAAC,4CAAD,CAAX;AACH;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,KARL,EASKJ,IATL,CASWP,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAbL,EAcKO,KAdL,CAcYC,GAAD,IAAS;AACZR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAjBL,EADY,CAmBZ;;AAGA,WAAO,MAAMY,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAb;AACH,GAvBQ,EAuBN,CAACjB,GAAD,CAvBM,CAAT;AAyBA,SAAO;AACHC,IAAAA,IADG;AAEHE,IAAAA,SAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CApCD;;GAAMN,Q;;AAsCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nconst useFetch = (url) => {\n    // Data içindeki jsondan çekeceğiz burada o yüzden null veriyoruz\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(url)\n            .then((res) => {\n                // console.log(res);\n                // res.ok means fetch is okey or not\n                if (!res.ok) {\n                    throw Error(\"Could Not Fetch The Data For That Resource\");\n                }\n                return res.json();\n            })\n            .then((data) => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch((err) => {\n                setError(err.message);\n                setIsPending(false);\n            });\n        // örnek olarak url parametresini verdiğimizde artık url statesi tetiklendiğinde çalışacak.\n\n\n        return () => console.log('cleanup');\n    }, [url]);\n\n    return {\n        data,\n        isPending,\n        error\n    }\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}