{"ast":null,"code":"var _jsxFileName = \"/Users/mertberkanakdeniz/Documents/React-Youtube/dojo-blog/src/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('mario');\n  const [isPending, setIsPending] = useState('false');\n\n  const handleSubmit = e => {\n    e.preventDefault(); // to prevent page refresh\n\n    const blog = {\n      title,\n      body,\n      author\n    };\n    setIsPending(true);\n    fetch(\"http://localhost:8000/blogs\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      console.log('new blog added');\n      setIsPending(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mario\",\n          children: \"mario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yoshi\",\n          children: \"yoshi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"AGyQo+WV31UVkkhLBZwuvgFN+58=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/mertberkanakdeniz/Documents/React-Youtube/dojo-blog/src/Create.js"],"names":["useState","Create","title","setTitle","body","setBody","author","setAuthor","isPending","setIsPending","handleSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","then","console","log","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,OAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,OAAD,CAA1C;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CACJ;;AACpB,UAAMC,IAAI,GAAG;AAAEX,MAAAA,KAAF;AAASE,MAAAA,IAAT;AAAeE,MAAAA;AAAf,KAAb;AAEAG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAK,IAAAA,KAAK,CAAC,6BAAD,EAA+B;AAChCC,MAAAA,MAAM,EAAC,MADyB;AAEhCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFuB;AAGhCZ,MAAAA,IAAI,EAAEa,IAAI,CAACC,SAAL,CAAeL,IAAf;AAH0B,KAA/B,CAAL,CAIGM,IAJH,CAIQ,MAAK;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAPD;AAQH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAER,KAHX;AAII,QAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACW,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAEnB,IAFX;AAGI,QAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACW,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AACI,QAAA,KAAK,EAAEjB,MADX;AAEI,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,SAAS,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAF9B;AAAA,gCAII;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAnDD;;GAAMtB,M;;KAAAA,M;AAqDN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Create = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [author, setAuthor] = useState('mario');\n    const [isPending, setIsPending] = useState('false');\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // to prevent page refresh\n        const blog = { title, body, author };\n\n        setIsPending(true);\n\n        fetch(\"http://localhost:8000/blogs\",{\n            method:'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(blog)\n        }).then(()=> {\n            console.log('new blog added')\n            setIsPending(false);\n        })\n    }\n\n    return (\n        <div className=\"create\">\n            <h2>Add a New Blog</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Blog title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <label>Blog body:</label>\n                <textarea\n                    required\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                ></textarea>\n                <label>Blog author:</label>\n                <select\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                >\n                    <option value=\"mario\">mario</option>\n                    <option value=\"yoshi\">yoshi</option>\n                </select>\n                <button>Add Blog</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}