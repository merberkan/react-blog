{"ast":null,"code":"var _jsxFileName = \"/Users/mertberkanakdeniz/Documents/React-Youtube/dojo-blog/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport BlogList from \"./BlogList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // let name = 'mario';\n  // useState kullanarak tekrardan renderlanmasını sağlıyoruz. Böylece daha reactive oluyor\n  // const [name, setName] = useState('mario');\n  // const [age, setAge] = useState(25);\n  const [blogs, setBlogs] = useState([{\n    title: 'My new website',\n    body: 'lorem ipsum...',\n    author: 'mario',\n    id: 1\n  }, {\n    title: 'Welcome Party',\n    body: 'lorem ipsum...',\n    author: 'yoshi',\n    id: 2\n  }, {\n    title: 'Web dev top tips',\n    body: 'lorem ipsum...',\n    author: 'mario',\n    id: 3\n  }]); // const handleClick = () => {\n  //     name = 'luigi';\n  //     console.log(name);\n  //     setName('luigi');\n  //     setAge(30);\n  // }\n  // const handleClickAgain = (name) => {\n  //     console.log('hello'+name);\n  // }\n\n  const handleDelete = id => {\n    // Filtreleme ile birlikte aslında silme işlemini yapıyor.\n    const newBlogs = blogs.filter(blog => blog.id !== id); // Daha sonra ise hooks ile verdiğimiz fonksiyon yardımıyla yeni değeri kayıt ediyor.\n\n    setBlogs(newBlogs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All Blogs!\",\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"2nXCw/T7ptv1eHgtGeDkMKCkniQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mertberkanakdeniz/Documents/React-Youtube/dojo-blog/src/Home.js"],"names":["useState","BlogList","Home","blogs","setBlogs","title","body","author","id","handleDelete","newBlogs","filter","blog"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf;AACA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAC/B;AAACK,IAAAA,KAAK,EAAE,gBAAR;AAA0BC,IAAAA,IAAI,EAAE,gBAAhC;AAAkDC,IAAAA,MAAM,EAAC,OAAzD;AAAkEC,IAAAA,EAAE,EAAC;AAArE,GAD+B,EAE/B;AAACH,IAAAA,KAAK,EAAE,eAAR;AAAyBC,IAAAA,IAAI,EAAE,gBAA/B;AAAiDC,IAAAA,MAAM,EAAC,OAAxD;AAAiEC,IAAAA,EAAE,EAAC;AAApE,GAF+B,EAG/B;AAACH,IAAAA,KAAK,EAAE,kBAAR;AAA4BC,IAAAA,IAAI,EAAE,gBAAlC;AAAoDC,IAAAA,MAAM,EAAC,OAA3D;AAAoEC,IAAAA,EAAE,EAAC;AAAvE,GAH+B,CAAD,CAAlC,CALe,CAUf;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAID,EAAD,IAAQ;AACzB;AACA,UAAME,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAjB,CAFyB,CAGzB;;AACAJ,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BAII,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,KAAjB;AAAwB,MAAA,KAAK,EAAC,YAA9B;AAA2C,MAAA,YAAY,EAAEM;AAAzD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArCD;;GAAMP,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport BlogList from \"./BlogList\";\n\nconst Home = () => {\n    // let name = 'mario';\n    // useState kullanarak tekrardan renderlanmasını sağlıyoruz. Böylece daha reactive oluyor\n    // const [name, setName] = useState('mario');\n    // const [age, setAge] = useState(25);\n    const [blogs, setBlogs] = useState([\n        {title: 'My new website', body: 'lorem ipsum...', author:'mario', id:1},\n        {title: 'Welcome Party', body: 'lorem ipsum...', author:'yoshi', id:2},\n        {title: 'Web dev top tips', body: 'lorem ipsum...', author:'mario', id:3},\n    ]);\n    // const handleClick = () => {\n    //     name = 'luigi';\n    //     console.log(name);\n    //     setName('luigi');\n    //     setAge(30);\n    // }\n\n    // const handleClickAgain = (name) => {\n    //     console.log('hello'+name);\n    // }\n\n    const handleDelete = (id) => {\n        // Filtreleme ile birlikte aslında silme işlemini yapıyor.\n        const newBlogs = blogs.filter(blog => blog.id !== id);\n        // Daha sonra ise hooks ile verdiğimiz fonksiyon yardımıyla yeni değeri kayıt ediyor.\n        setBlogs(newBlogs);\n    }\n\n    return (\n        <div className=\"home\">\n            {/* <p>{name} is {age} years old</p> */}\n            {/* <button onClick={handleClick}>Click me</button>  */}\n            {/* <button onClick={()=> handleClickAgain('mario')}>Click me again</button> */}\n            <BlogList blogs={blogs} title=\"All Blogs!\" handleDelete={handleDelete}></BlogList>\n            {/* <BlogList blogs={blogs.filter((blog) => blog.author === 'mario')} title=\"Mario's blogs\"></BlogList> */}\n        </div>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}